{
  "openapi": "3.0.1",
  "info": {
    "title": "openApi",
    "description": "",
    "version": "1.0.0"
  },
  "tags": [],
  "paths": {
    "/apiInfo/v2/token/create": {
      "post": {
        "summary": "Token create",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RechargeApiTokenDto",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultToken",
                  "description": ""
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {
                    "token": ""
                  },
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/token/valid": {
      "get": {
        "summary": "Token expiration time",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultTokenValid",
                  "description": "Long"
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {
                    "valid": 0
                  },
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/token/loginOut": {
      "post": {
        "summary": "Token login out",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenLoginOutDto",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultTokenLoginOut",
                  "description": "Boolean"
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {
                    "loginOut": false
                  },
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/fund/AccountBalance": {
      "get": {
        "summary": "Account balance",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultListBalance"
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": [
                    {
                      "id": 0,
                      "code": "",
                      "usableQuota": 0
                    }
                  ],
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/fund/transfer": {
      "post": {
        "summary": "Fund transfer",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FundsTransferDto",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultFundsTransfer"
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {
                    "orderId": "",
                    "status": "",
                    "direction": "",
                    "transferAmount": 0,
                    "transferCurrency": "",
                    "receivedAmount": 0,
                    "receivedCurrency": "",
                    "rate": 0
                  },
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/fund/cardBalance": {
      "get": {
        "summary": "Card balance",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "cardId",
            "in": "query",
            "description": "user cardId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultFundBalance",
                  "description": "Result<FundBalanceVo>"
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {
                    "cardId": "",
                    "billingCurrency": "",
                    "balance": 0,
                    "transferableBalance": 0
                  },
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/user/list": {
      "get": {
        "summary": "Cardholder list",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Current page count",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of displays per page,Default display of 20 items",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultApiPageResponseCardholderCreate",
                  "description": ""
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {
                    "currentPage": 0,
                    "records": [
                      {
                        "id": "",
                        "birthday": "",
                        "cardTypeId": "",
                        "requestId": "",
                        "email": "",
                        "firstName": "",
                        "lastName": "",
                        "mobile": "",
                        "mobilePrefix": "",
                        "nationalityCountryCode": "",
                        "residentialAddress": "",
                        "residentialCountryCode": "",
                        "residentialCity": "",
                        "residentialPostalCode": "",
                        "residentialState": ""
                      }
                    ],
                    "size": 0,
                    "totalPage": 0,
                    "hasMore": false
                  },
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/user/create": {
      "post": {
        "summary": "Cardholder create",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardholderDto",
                "description": "cardholderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultCardholderCreate",
                  "description": ""
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {
                    "id": "",
                    "birthday": "",
                    "cardTypeId": "",
                    "requestId": "",
                    "email": "",
                    "firstName": "",
                    "lastName": "",
                    "mobile": "",
                    "mobilePrefix": "",
                    "nationalityCountryCode": "",
                    "residentialAddress": "",
                    "residentialCountryCode": "",
                    "residentialCity": "",
                    "residentialPostalCode": "",
                    "residentialState": ""
                  },
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/cards/cardBins": {
      "get": {
        "summary": "Card BIN",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "description": "card organization visa :visa\nmaster :master",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sectionNo",
            "in": "query",
            "description": "card number section",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "area",
            "in": "query",
            "description": "area",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scene",
            "in": "query",
            "description": "scene",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "current page count",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "page size,Number of displays per page,Default display of 20 items",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultCardBin",
                  "description": ""
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {
                    "openCardMaxCount": 0,
                    "items": {
                      "currentPage": 0,
                      "records": [
                        {
                          "cardBINId": "",
                          "area": "",
                          "netWork": "",
                          "currencyCode": "",
                          "currencyName": "",
                          "existsCardClose": "",
                          "existsCardFreeze": "",
                          "existsCardOpen": "",
                          "existsCardOut": "",
                          "existsCardRecharge": "",
                          "openCardFee": 0,
                          "rechargeFee": 0,
                          "transactionFailedFee": 0,
                          "smallPaymentFee": 0,
                          "crossBorderFee": 0,
                          "transactionCardCancellationFee": 0,
                          "remark": "",
                          "sectionNo": "",
                          "openCardMaxCount": 0,
                          "applyMinAmount": 0,
                          "applyMaxAmount": 0
                        }
                      ],
                      "size": 0,
                      "totalPage": 0,
                      "hasMore": false
                    }
                  },
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/cards/create": {
      "post": {
        "summary": "Card create",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardOpenDto",
                "description": "cardOpenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result",
                  "description": ""
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {},
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/cards/sensitive": {
      "get": {
        "summary": "Card sensitive details",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "cardId",
            "in": "query",
            "description": "cardId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultCvc"
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {
                    "cardNumber": "",
                    "cvv": "",
                    "expire": ""
                  },
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/cards/details": {
      "get": {
        "summary": "Card details",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "cardId",
            "in": "query",
            "description": "cardId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultCardDetails"
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {
                    "cardId": 0,
                    "cardNumber": "",
                    "network": "",
                    "currency": "",
                    "cardStatus": "",
                    "cardGroup": "",
                    "usableQuota": 0,
                    "creatDate": "",
                    "cardholderCreate": {
                      "id": "",
                      "birthday": "",
                      "email": "",
                      "firstName": "",
                      "lastName": "",
                      "mobile": "",
                      "mobilePrefix": "",
                      "nationalityCountryCode": "",
                      "residentialAddress": "",
                      "residentialCountryCode": "",
                      "residentialCity": "",
                      "residentialPostalCode": "",
                      "residentialState": ""
                    }
                  },
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/cards/list": {
      "get": {
        "summary": "Card list",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "cardBINId",
            "in": "query",
            "description": "cardBINId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cardNumber",
            "in": "query",
            "description": "cardNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate (YYYY-MM-DDTHH:mm:ss)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate   (YYYY-MM-DDTHH:mm:ss)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "page size",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cardStatus",
            "in": "query",
            "description": "cardStatus active :active\ninactive :inactive\nblocked :blocked\nclosed :closed",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultApiPageResponseCardDetails"
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {
                    "currentPage": 0,
                    "records": [
                      {
                        "cardId": 0,
                        "cardNumber": "",
                        "network": "",
                        "currency": "",
                        "cardStatus": "",
                        "cardGroup": "",
                        "usableQuota": 0,
                        "creatDate": "",
                        "cardholderCreate": {
                          "id": "",
                          "birthday": "",
                          "email": "",
                          "firstName": "",
                          "lastName": "",
                          "mobile": "",
                          "mobilePrefix": "",
                          "nationalityCountryCode": "",
                          "residentialAddress": "",
                          "residentialCountryCode": "",
                          "residentialCity": "",
                          "residentialPostalCode": "",
                          "residentialState": ""
                        }
                      }
                    ],
                    "size": 0,
                    "totalPage": 0,
                    "hasMore": false
                  },
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/cards/update": {
      "post": {
        "summary": "Card status update",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardStatusDto",
                "description": "cardStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultCardStatus",
                  "description": ""
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {
                    "cardId": "",
                    "cardStatus": "",
                    "remark": ""
                  },
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/cards/remark": {
      "post": {
        "summary": "Card remark update",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "tzx api token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardRemarksDto",
                "description": "cardRemark"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultCardRemark",
                  "description": ""
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {
                    "cardId": "",
                    "remark": ""
                  },
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/apiInfo/v2/auth/pages": {
      "get": {
        "summary": "Authorizations",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "cardId",
            "in": "query",
            "description": "card id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cardNumber",
            "in": "query",
            "description": "cardNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transactionStatus",
            "in": "query",
            "description": "transaction status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transactionType",
            "in": "query",
            "description": "transaction type authorization :transaction.authorized\nverification :transaction.verified\nrefund :transaction.refunded\ncardRechargeRefunded :card recharge refunded\ncardReclosedRefunded :card reclosed refunded\nauthorizationReversal :transaction.reversed authorization_reversal\nrefundReversal :transaction.reversed refund_reversal\ninquiry :authorization inquiry\nrevoke :revoke\nauthorizationCorrection :correct authorization\nrefundCorrection :correction and refund\ncardRecharge :recharge card recharge\ncardServiceFee :card_service_fee\nother :other",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantName",
            "in": "query",
            "description": "merchant name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "(YYYY-MM-DDTHH:mm:ss)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "(YYYY-MM-DDTHH:mm:ss)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page count",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of displays per page,Default display of 50 items",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tzx-api-token",
            "in": "header",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultApiPageResponseAuthorization",
                  "description": ""
                },
                "example": {
                  "code": "",
                  "message": "",
                  "data": {
                    "currentPage": 0,
                    "records": [
                      {
                        "transactionId": "",
                        "transactionType": "",
                        "cardId": "",
                        "cardNumber": "",
                        "merchantCountry": "",
                        "merchantName": "",
                        "authDate": "",
                        "authorizationAmount": 0,
                        "authorizationCurrency": "",
                        "settlementAmount": 0,
                        "settlementCurrency": "",
                        "verificationCode": "",
                        "transactionStatus": "",
                        "remark": "",
                        "originalTransactionId": ""
                      }
                    ],
                    "size": 0,
                    "totalPage": 0,
                    "hasMore": false
                  },
                  "requestId": ""
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "token"
          }
        }
      },
      "ResultToken": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/Token",
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "RechargeApiTokenDto": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "account"
          },
          "appId": {
            "type": "string",
            "description": "appId"
          },
          "requestId": {
            "type": "string",
            "description": "client request Id"
          }
        },
        "required": [
          "account",
          "appId",
          "requestId"
        ]
      },
      "TokenValid": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "integer",
            "description": "period of validity"
          }
        }
      },
      "ResultTokenValid": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/TokenValid",
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "TokenLoginOut": {
        "type": "object",
        "properties": {
          "loginOut": {
            "type": "boolean",
            "description": ""
          }
        }
      },
      "ResultTokenLoginOut": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/TokenLoginOut",
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "TokenLoginOutDto": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "description": "client request Id"
          }
        }
      },
      "CardholderCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday"
          },
          "cardTypeId": {
            "type": "string",
            "description": "Card type ID"
          },
          "requestId": {
            "type": "string",
            "description": "Client requestId"
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "mobile": {
            "type": "string",
            "description": "User's mobile number"
          },
          "mobilePrefix": {
            "type": "string",
            "description": "Mobile number prefix (e.g., +1, +86)"
          },
          "nationalityCountryCode": {
            "type": "string",
            "description": "Nationality country code"
          },
          "residentialAddress": {
            "type": "string",
            "description": "Residential address (billing address)"
          },
          "residentialCountryCode": {
            "type": "string",
            "description": "Residential country code"
          },
          "residentialCity": {
            "type": "string",
            "description": "Residential city (billing city)"
          },
          "residentialPostalCode": {
            "type": "string",
            "description": "Residential postal code (billing postal code)"
          },
          "residentialState": {
            "type": "string",
            "description": "Residential state (billing state)"
          }
        }
      },
      "ApiPageResponseCardholderCreate": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "description": "Current page count"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardholderCreate",
              "description": ""
            },
            "description": "Data records"
          },
          "size": {
            "type": "integer",
            "description": "Quantity displayed per page"
          },
          "totalPage": {
            "type": "integer",
            "description": "total page"
          },
          "hasMore": {
            "type": "boolean",
            "description": "has more record"
          }
        }
      },
      "ResultApiPageResponseCardholderCreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/ApiPageResponseCardholderCreate",
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "ResultCardholderCreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/CardholderCreate",
            "description": ""
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "CardholderDto": {
        "type": "object",
        "properties": {
          "birthday": {
            "type": "string",
            "description": "User's birthday"
          },
          "requestId": {
            "type": "string",
            "description": "Client request id"
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "mobile": {
            "type": "string",
            "description": "User's mobile number"
          },
          "mobilePrefix": {
            "type": "string",
            "description": "Mobile number prefix (e.g., +1, +86)"
          },
          "nationalityCountryCode": {
            "type": "string",
            "description": "Nationality country code"
          },
          "residentialAddress": {
            "type": "string",
            "description": "Residential address (billing address)"
          },
          "residentialCountryCode": {
            "type": "string",
            "description": "Residential country code"
          },
          "residentialCity": {
            "type": "string",
            "description": "Residential city (billing city)"
          },
          "residentialPostalCode": {
            "type": "string",
            "description": "Residential postal code (billing postal code)"
          },
          "residentialState": {
            "type": "string",
            "description": "Residential state (billing state)"
          }
        },
        "required": [
          "requestId",
          "email",
          "firstName"
        ]
      },
      "CardBinInfo": {
        "type": "object",
        "properties": {
          "cardBINId": {
            "type": "string",
            "description": "card BIN id"
          },
          "area": {
            "type": "string",
            "description": "area"
          },
          "netWork": {
            "type": "string",
            "description": "card network",
            "enum": [
              "visa",
              "master"
            ]
          },
          "currencyCode": {
            "type": "string",
            "description": "currency code"
          },
          "currencyName": {
            "type": "string",
            "description": "currency name"
          },
          "existsCardClose": {
            "type": "string",
            "description": "card close functionality",
            "enum": [
              "Enabled",
              "Disabled",
              "NotSupported"
            ]
          },
          "existsCardFreeze": {
            "type": "string",
            "description": "card freeze functionality",
            "enum": [
              "Enabled",
              "Disabled",
              "NotSupported"
            ]
          },
          "existsCardOpen": {
            "type": "string",
            "description": "card open functionality",
            "enum": [
              "Enabled",
              "Disabled",
              "NotSupported"
            ]
          },
          "existsCardOut": {
            "type": "string",
            "description": "card transfer functionality",
            "enum": [
              "Enabled",
              "Disabled",
              "NotSupported"
            ]
          },
          "existsCardRecharge": {
            "type": "string",
            "description": "card recharge functionality",
            "enum": [
              "Enabled",
              "Disabled",
              "NotSupported"
            ]
          },
          "openCardFee": {
            "type": "number",
            "description": "fee of cards opened"
          },
          "rechargeFee": {
            "type": "number",
            "description": "card opening fee rate"
          },
          "transactionFailedFee": {
            "type": "number",
            "description": "transaction failure handling fee"
          },
          "smallPaymentFee": {
            "type": "number",
            "description": "small payment handling fee"
          },
          "crossBorderFee": {
            "type": "number",
            "description": "cross-border transaction fee"
          },
          "transactionCardCancellationFee": {
            "type": "number",
            "description": "transaction failure fee after card cancellation"
          },
          "remark": {
            "type": "string",
            "description": "remark"
          },
          "sectionNo": {
            "type": "string",
            "description": "section number"
          },
          "openCardMaxCount": {
            "type": "integer",
            "description": "max open card count"
          },
          "applyMinAmount": {
            "type": "integer",
            "description": "minimum card opening amount"
          },
          "applyMaxAmount": {
            "type": "integer",
            "description": "max card opening amount"
          }
        }
      },
      "ApiPageResponseCardBinInfo": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "description": "Current page count"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardBinInfo",
              "description": ""
            },
            "description": "Data records"
          },
          "size": {
            "type": "integer",
            "description": "Quantity displayed per page"
          },
          "totalPage": {
            "type": "integer",
            "description": "total page"
          },
          "hasMore": {
            "type": "boolean",
            "description": "has more record"
          }
        }
      },
      "CardBin": {
        "type": "object",
        "properties": {
          "openCardMaxCount": {
            "type": "number",
            "description": "the maximum number of cards that can be opened in total"
          },
          "items": {
            "$ref": "#/components/schemas/ApiPageResponseCardBinInfo",
            "description": "available cardBIN"
          }
        }
      },
      "ResultCardBin": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/CardBin",
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "Cvc": {
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string",
            "description": "卡号"
          },
          "cvv": {
            "type": "string",
            "description": "CVV"
          },
          "expire": {
            "type": "string",
            "description": "有效期"
          }
        }
      },
      "ResultCvc": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/Cvc",
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "CardDetailCardholder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday"
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "mobile": {
            "type": "string",
            "description": "User's mobile number"
          },
          "mobilePrefix": {
            "type": "string",
            "description": "Mobile number prefix (e.g., +1, +86)"
          },
          "nationalityCountryCode": {
            "type": "string",
            "description": "Nationality country code"
          },
          "residentialAddress": {
            "type": "string",
            "description": "Residential address (billing address)"
          },
          "residentialCountryCode": {
            "type": "string",
            "description": "Residential country code"
          },
          "residentialCity": {
            "type": "string",
            "description": "Residential city (billing city)"
          },
          "residentialPostalCode": {
            "type": "string",
            "description": "Residential postal code (billing postal code)"
          },
          "residentialState": {
            "type": "string",
            "description": "Residential state (billing state)"
          }
        }
      },
      "CardDetails": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "integer",
            "description": "cardId"
          },
          "cardNumber": {
            "type": "string",
            "description": "cardNumber"
          },
          "network": {
            "type": "string",
            "description": "network visa/master"
          },
          "currency": {
            "type": "string",
            "description": "currency"
          },
          "cardStatus": {
            "type": "string",
            "description": "card status",
            "enum": [
              "active",
              "inactive",
              "blocked",
              "closed"
            ]
          },
          "cardGroup": {
            "type": "string",
            "description": "card group"
          },
          "usableQuota": {
            "type": "number",
            "description": "card usableQuota"
          },
          "creatDate": {
            "type": "string",
            "description": "create date"
          },
          "cardholderCreate": {
            "$ref": "#/components/schemas/CardDetailCardholder",
            "description": ""
          }
        }
      },
      "ResultCardDetails": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/CardDetails",
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "Object": {
        "type": "object",
        "properties": {}
      },
      "Result": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/Object",
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "CardOpenDto": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "description": "client request id"
          },
          "amount": {
            "type": "number",
            "description": "amount"
          },
          "cardBinId": {
            "type": "string",
            "description": "card bin id"
          }
        }
      },
      "ApiPageResponseCardDetails": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "description": "Current page count"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardDetails",
              "description": "Generic data, including actual return data"
            },
            "description": "Data records"
          },
          "size": {
            "type": "integer",
            "description": "Quantity displayed per page"
          },
          "totalPage": {
            "type": "integer",
            "description": "total page"
          },
          "hasMore": {
            "type": "boolean",
            "description": "has more record"
          }
        }
      },
      "ResultApiPageResponseCardDetails": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/ApiPageResponseCardDetails",
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "CardStatus": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "card id"
          },
          "cardStatus": {
            "type": "string",
            "description": "card status",
            "enum": [
              "active",
              "inactive",
              "blocked",
              "closed"
            ]
          },
          "remark": {
            "type": "string",
            "description": "remark"
          }
        }
      },
      "ResultCardStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/CardStatus",
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "CardStatusDto": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "description": "client request Id"
          },
          "cardId": {
            "type": "string",
            "description": "cardid"
          },
          "cardStatusEnum": {
            "type": "string",
            "description": "card status",
            "enum": [
              "active",
              "inactive",
              "blocked",
              "closed"
            ]
          },
          "remark": {
            "type": "string",
            "description": "remark"
          }
        }
      },
      "CardRemark": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "card id"
          },
          "remark": {
            "type": "string",
            "description": "remark"
          }
        }
      },
      "ResultCardRemark": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/CardRemark",
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "CardRemarksDto": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "description": "client request Id"
          },
          "cardId": {
            "type": "string",
            "description": "card id"
          },
          "remark": {
            "type": "string",
            "description": "remark"
          }
        }
      },
      "Authorization": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "unique transactionId id"
          },
          "transactionType": {
            "type": "string",
            "description": "transaction Type",
            "enum": [
              "authorization",
              "verification",
              "refund",
              "cardRechargeRefunded",
              "cardReclosedRefunded",
              "authorizationReversal",
              "refundReversal",
              "inquiry",
              "revoke",
              "authorizationCorrection",
              "refundCorrection",
              "cardRecharge",
              "cardServiceFee",
              "other"
            ]
          },
          "cardId": {
            "type": "string",
            "description": "card id"
          },
          "cardNumber": {
            "type": "string",
            "description": "card number with mask"
          },
          "merchantCountry": {
            "type": "string",
            "description": "merchant Country"
          },
          "merchantName": {
            "type": "string",
            "description": "merchant Name"
          },
          "authDate": {
            "type": "string",
            "description": "trading date"
          },
          "authorizationAmount": {
            "type": "number",
            "description": "authorization amount"
          },
          "authorizationCurrency": {
            "type": "string",
            "description": "authorization currency"
          },
          "settlementAmount": {
            "type": "number",
            "description": "settlement  amount"
          },
          "settlementCurrency": {
            "type": "string",
            "description": "settlement  currency"
          },
          "verificationCode": {
            "type": "string",
            "description": "verification code"
          },
          "transactionStatus": {
            "type": "string",
            "description": "transaction status"
          },
          "remark": {
            "type": "string",
            "description": "transaction remark"
          },
          "originalTransactionId": {
            "type": "string",
            "description": "original transaction id"
          }
        }
      },
      "ApiPageResponseAuthorization": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "description": "Current page count"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Authorization",
              "description": "auth"
            },
            "description": "Data records"
          },
          "size": {
            "type": "integer",
            "description": "Quantity displayed per page"
          },
          "totalPage": {
            "type": "integer",
            "description": "total page"
          },
          "hasMore": {
            "type": "boolean",
            "description": "has more record"
          }
        }
      },
      "ResultApiPageResponseAuthorization": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/ApiPageResponseAuthorization",
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "Balance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "id"
          },
          "code": {
            "type": "string",
            "description": "Currency code"
          },
          "usableQuota": {
            "type": "number",
            "description": "Available balance"
          }
        }
      },
      "ResultListBalance": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Balance",
              "description": ""
            },
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "FundsTransfer": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "orderId"
          },
          "status": {
            "type": "string",
            "description": "status",
            "enum": [
              "success",
              "fail",
              "wait",
              "review",
              "exception"
            ]
          },
          "direction": {
            "type": "string",
            "description": "",
            "enum": [
              "transferIn",
              "transferOut"
            ]
          },
          "transferAmount": {
            "type": "number",
            "description": "transfer amount"
          },
          "transferCurrency": {
            "type": "string",
            "description": "transfer currency"
          },
          "receivedAmount": {
            "type": "number",
            "description": "received amount"
          },
          "receivedCurrency": {
            "type": "string",
            "description": "received currency"
          },
          "rate": {
            "type": "number",
            "description": "rate"
          }
        }
      },
      "ResultFundsTransfer": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/FundsTransfer",
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      },
      "FundsTransferDto": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "accountId"
          },
          "direction": {
            "type": "string",
            "description": "Transfer direction",
            "enum": [
              "transferIn",
              "transferOut"
            ]
          },
          "amount": {
            "type": "string",
            "description": "amount The minimum amount must be greater than 1"
          },
          "requestId": {
            "type": "string",
            "description": "client request id"
          }
        },
        "required": [
          "cardId",
          "direction",
          "amount",
          "requestId"
        ]
      },
      "FundBalance": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": ""
          },
          "billingCurrency": {
            "type": "string",
            "description": ""
          },
          "balance": {
            "type": "number",
            "description": ""
          },
          "transferableBalance": {
            "type": "number",
            "description": ""
          }
        }
      },
      "ResultFundBalance": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code code, usually HTTP code code"
          },
          "message": {
            "type": "string",
            "description": "Prompt message, describing the reason for success or failure"
          },
          "data": {
            "$ref": "#/components/schemas/FundBalance",
            "description": "Generic data, including actual return data"
          },
          "requestId": {
            "type": "string",
            "description": "Generic data, including actual return data"
          }
        }
      }
    },
    "securitySchemes": {}
  },
  "servers": [],
  "security": []
}